#!/bin/bash

#Copy Asterisk file fragments
[ ! -e /etc/asterisk/sark_customer_agents_main.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_agents_main.conf 
[ ! -e /etc/asterisk/sark_customer_extensions_globals.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_extensions_globals.conf 
[ ! -e /etc/asterisk/sark_customer_hints.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_hints.conf 
[ ! -e /etc/asterisk/sark_customer_iax_main.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_iax_main.conf 
[ ! -e /etc/asterisk/sark_customer_queues_main.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_queues_main.conf 
[ ! -e /etc/asterisk/sark_customer_sip_main.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_sip_main.conf 
[ ! -e /etc/asterisk/sark_customer_vmail_main.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_vmail_main.conf 
[ ! -e /etc/asterisk/sark_customer_agents_header.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_agents_header.conf
[ ! -e /etc/asterisk/sark_customer_queues_header.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_queues_header.conf
[ ! -e /etc/asterisk/sark_customer_vmail_header.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_vmail_header.conf
[ ! -e /etc/asterisk/sark_customer_manager.conf ] && cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_manager.conf 
[ ! -e /opt/sark/otrr/var/spool/asterisk/monitor ] && mkdir -p /opt/sark/otrr/var/spool/asterisk/monitor
[ ! -e /opt/sark/mixmon/var/spool/asterisk/monitor ] && mkdir -p /opt/sark/mixmon/var/spool/asterisk/monitor
[ ! -e /var/spool/asterisk/monstage ] && mkdir -p /var/spool/asterisk/monstage
[ ! -e /var/spool/asterisk/monout ] && mkdir -p /var/spool/asterisk/monout
[ ! -e /usr/share/asterisk/sarksounds ] && mkdir -p /usr/share/asterisk/sarksounds/default
[ ! -e /usr/share/asterisk/moh-default ] && mkdir -p /usr/share/asterisk/moh-default
[ ! -e /opt/sark/passwd/htpasswd ] && cp -f /opt/sark/cache/htpasswd /opt/sark/passwd/htpasswd
[ ! -e /opt/sark/bkup ] && mkdir -p /opt/sark/bkup
[ ! -e /opt/sark/snap ] && mkdir -p /opt/sark/snap
#[ ! -e /opt/sark/www/header.htm ] && /bin/cp -f /opt/sark/cache/header.htm /opt/sark/www

if [ ! -e /etc/asterisk/sark_customer_iax_header.conf ]; then 
        cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_iax_header.conf
        echo "language=en-gb" >> /etc/asterisk/sark_customer_iax_header.conf
fi

if [ ! -e /etc/asterisk/sark_customer_sip_header.conf ]; then
        cp -f /opt/sark/cache/template_cust.conf /etc/asterisk/sark_customer_sip_header.conf
        echo "language=en-gb" >> /etc/asterisk/sark_customer_sip_header.conf
fi

usermod -a -G asterisk www-data

# added in 5.0.0-21 for hotdesk 
usermod -a -G www-data asterisk


[ -e /etc/dahdi ] && chown -R asterisk:asterisk /etc/dahdi
[ -e /etc/ssmtp/ssmtp.conf ] && chown www-data:www-data /etc/ssmtp/ssmtp.conf

chown -R www-data:www-data /opt/sark/www
chown -R www-data:www-data /opt/sark/db
chown -R www-data:www-data /opt/sark/passwd
chown -R www-data:www-data /opt/sark/cache
chown www-data:www-data /opt/sark/etc/apache2/sark_includes/*

chown -R asterisk:asterisk /opt/sark/otrr/var/spool/asterisk/monitor 
chown -R asterisk:asterisk /opt/sark/mixmon/var/spool/asterisk/monitor 

chown -R asterisk:asterisk /etc/asterisk/*
chown -R asterisk:asterisk /var/lib/asterisk
chown -R asterisk:asterisk /usr/share/asterisk/sounds
chown -R asterisk:asterisk /var/log/asterisk
chown -R asterisk:asterisk /var/spool/asterisk

chmod 664 -R /etc/asterisk/*
chmod +x /etc/asterisk/manager.d
chmod 755 -R /opt/sark/www
chmod 755 -R /opt/sark/generator
chmod 755 -R /opt/sark/perl
chmod 755 -R /opt/sark/scripts

#FOP directory 
[ ! -e /opt/sark/fop ] && mkdir /opt/sark/fop

grep -q '#include sark_manager.conf' /etc/asterisk/manager.conf
if [  "$?" -ne "0" ] ; then
        cp -f /opt/sark/cache/manager.conf /etc/asterisk
fi

grep -q '#include sark_sip_notify.conf' /etc/asterisk/sip_notify.conf
if [  "$?" -ne "0" ] ; then
        echo "#include sark_sip_notify.conf" >> /etc/asterisk/sip_notify.conf
fi

grep -q '#include sark_cdr.conf' /etc/asterisk/cdr.conf
if [  "$?" -ne "0" ] ; then
        echo "#include sark_cdr.conf" >> /etc/asterisk/cdr.conf
        echo "enable=no" > /etc/asterisk/sark_cdr.conf
fi

grep -q '#include sark_moh.conf' /etc/asterisk/musiconhold.conf
if [  "$?" -ne "0" ] ; then
        echo "#include sark_cdr.conf" >> /etc/asterisk/musiconhold.conf
fi

if [ -e /etc/asterisk/meetme.conf ] ; then
	grep -q '#include sark_meetme.conf' /etc/asterisk/meetme.conf
	if [  "$?" -ne "0" ] ; then
        echo "#include sark_meetme.conf" >> /etc/asterisk/meetme.conf
	fi
fi

if [ -e /etc/asterisk/confbridge.conf ] ; then
	grep -q '#include sark_confbridge.conf' /etc/asterisk/confbridge.conf
	if [  "$?" -ne "0" ] ; then
        echo "#include sark_confbridge.conf" >> /etc/asterisk/confbridge.conf
	fi
fi
 
chmod +x /opt/sark/service/srk-ua-helper/run 
chmod +x /opt/sark/service/srk-ua-responder/run
chmod +x /opt/sark/service/srk-ua-siplog/run

# remove old runit sark entry if it exists
[ -L /etc/service/sark ] && rm /etc/service/sark
# link the helpers if they don't exist 
[ ! -L /etc/service/srk-ua-helper ] && ln -s /opt/sark/service/srk-ua-helper /etc/service
[ ! -L /etc/service/srk-ua-responder ] && ln -s /opt/sark/service/srk-ua-responder /etc/service
[ ! -L /etc/service/srk-ua-rssh ] && ln -s /opt/sark/service/srk-ua-rssh /etc/service
[ ! -L /etc/service/srk-ua-siplog ] && ln -s /opt/sark/service/srk-ua-siplog /etc/service

# 
# deal with the new apache 2.4 auth rules and jessie
# 

# disable defaults
# Jessie
[ -L /etc/apache2/sites-enabled/000-default.conf ] && a2dissite 000-default.conf > /dev/null 2>&1

# remove any previous sark references

rm -rf /etc/apache2/sites-enabled/sark*
rm -rf /etc/apache2/sites-available/sark*

# set links to the correct Vhost

#HTTPD
a2enmod rewrite > /dev/null 2>&1
a2enmod proxy > /dev/null 2>&1
a2enmod proxy_http > /dev/null 2>&1

#HTTPS
a2enmod ssl
if [ ! -e /etc/apache2/ssl ]; then
    mkdir /etc/apache2/ssl
    openssl req \
        -new \
        -x509 \
        -days 3650 \
        -keyout /etc/apache2/ssl/vhost1.key \
        -out /etc/apache2/ssl/vhost1.crt \
        -nodes \
        -subj "/O=Aelintra/OU=PBX/CN=sark.local" > /dev/null 2>&1
fi

#SIP/TLS
if [ ! -e /etc/asterisk/ssl ]; then
    mkdir /etc/asterisk/ssl
    echo 00 > /etc/asterisk/ssl/file.srl
    openssl req \
        -new \
        -days 3650 \
        -x509 \
        -out /etc/asterisk/ssl/ca.pem \
        -passin pass:artichok3 \
        -passout pass:artichok3 \
        -subj "/C=GB/ST=Yorkshire/L=Leeds/O=Aelintra/CN=sark.local" > /dev/null 2>&1
    openssl genrsa -out /etc/asterisk/ssl/server.key 2048 > /dev/null 2>&1
    openssl req \
        -key /etc/asterisk/ssl/server.key \
        -new \
        -out /etc/asterisk/ssl/server.req \
        -days 3650 \
        -subj "/C=GB/ST=Yorkshire/L=Leeds/O=Aelintra/CN=aelintra.com" > /dev/null 2>&1
    openssl x509 -req \
    	-in /etc/asterisk/ssl/server.req \
        -CA /etc/asterisk/ssl/ca.pem \
        -CAkey privkey.pem \
        -CAserial /etc/asterisk/ssl/file.srl \
        -passin pass:artichok3 \
        -out /etc/asterisk/ssl/server.pem \
        -days 3650 > /dev/null 2>&1
fi
chown -R asterisk:asterisk /etc/asterisk/ssl
chmod 511 /etc/asterisk/ssl
chmod 400 /etc/asterisk/ssl/*

#sudoers
if [ -e /etc/sudoers.d/sail ]; then 
	chmod 0440 /etc/sudoers.d/sailsudoers
fi
# all moved to sudoers.d/sail in 5.0.0-30
#if [ ! -e /etc/sudoers.d/sarkrssh ]; then
#        echo asterisk ALL=NOPASSWD: /usr/bin/sv > /etc/sudoers.d/sarkrssh
#        chmod 0440 /etc/sudoers.d/sarkrssh
#fi

#reverse proxy port perms
chown asterisk:asterisk /opt/sark/service/rssh/serviceport1

#handle multiple NICs
if [ ! -e /etc/network/interfaces.d ]; then
	mkdir -p /etc/network/interfaces.d
	echo "source /etc/network/interfaces.d/*" >> /etc/network/interfaces
fi
	
# set correct Asterisk dateformat in logger.conf
sed -i 's/^;dateformat=%F %T /dateformat=%F %T/' /etc/asterisk/logger.conf
# set security logging for Ast11 
sed -i '/^messages/c \messages => security,notice,warning,error' /etc/asterisk/logger.conf;
/usr/sbin/asterisk -rx 'logger reload'

#Shorewall setup
if [ -d /etc/shorewall ]; then
    sed -i 's/startup=0/startup=1/' /etc/default/shorewall
    sed -i "/^SAVE_IPSETS/c\SAVE_IPSETS=Yes" /etc/shorewall/shorewall.conf
    echo 'INCLUDE local.lan' > /etc/shorewall/params
    echo 'INCLUDE local.if1' >> /etc/shorewall/params

    cp -f /opt/sark/etc/shorewall/rules /etc/shorewall
    [ ! -e /etc/shorewall/sark_rules ] && cp /opt/sark/etc/shorewall/sark_rules /etc/shorewall
    #for pre 5.x upgrades check that 443 is open (otherwise they won't be able to login)
    grep  -q "tcp\s*443\s*" /etc/shorewall/sark_rules
	if [  "$?" -ne "0" ] ; then
        echo ACCEPT net:\$LAN \$FW tcp 443 - - >> /etc/shorewall/sark_rules 
	fi
    touch /etc/shorewall/sark_inline_fqdn
    touch /etc/shorewall/sark_inline_limit
    chown www-data:www-data /etc/shorewall/sark_rules
    chown www-data:www-data /etc/shorewall/sark_inline_fqdn
    chown www-data:www-data /etc/shorewall/sark_inline_limit
#    chown www-data:www-data /etc/shorewall/sark_blrules
fi

#Shorewall6 setup
if [ -d /etc/shorewall6 ]; then
# the rules file always gets refreshed
# 
    cp -f /opt/sark/etc/shorewall6/rules /etc/shorewall6
    sed -i 's/startup=0/startup=1/' /etc/default/shorewall6
    for file in `ls /opt/sark/etc/shorewall6/` ; do
                [ ! -e /etc/shorewall6/$file ] && cp -f /opt/sark/etc/shorewall6/$file /etc/shorewall6            
    done    
#    touch /etc/shorewall6/sark_blrules
    chown www-data:www-data /etc/shorewall6/sark_rules6
#    chown www-data:www-data /etc/shorewall6/sark_blrules
fi

# disable apache2 defaults
# jessie/stretch
[ -L /etc/apache2/sites-enabled/000-default.conf ] && a2dissite 000-default.conf > /dev/null 2>&1

#enable listening on IPV6 for apache
sed -i 's/Listen 80/Listen [::]:80/' /etc/apache2/ports.conf
sed -i 's/Listen 443/Listen [::]:443/' /etc/apache2/ports.conf


# F2b setup
[ -e /etc/fail2ban/jail.local ] && rm -rf /etc/fail2ban/jail.local && echo "replacing F2B jail.local" 

ln -s /opt/sark/etc/fail2ban/jail-stretch.local /etc/fail2ban/jail.local
[ ! -e /etc/fail2ban/action.d/shorewall.local ] && [ -e /opt/sark/etc/fail2ban/action.d/shorewall-jessie.local ] && ln -s /opt/sark/etc/fail2ban/action.d/shorewall-jessie.local /etc/fail2ban/action.d/shorewall.local

# apache setup
ln -s /opt/sark/etc/apache2/sites-available/sark-ssl-jessie.conf /etc/apache2/sites-available/sark-ssl.conf
ln -s /opt/sark/etc/apache2/sark_includes /etc/apache2/

# Asterisk 11+ call parks
[ ! -e /etc/asterisk/res_parking.conf ] && touch /etc/asterisk/res_parking.conf
grep -q '#include sark_res_parking.conf' /etc/asterisk/res_parking.conf
if [  "$?" -ne "0" ] ; then
    echo "#include sark_res_parking.conf" >> /etc/asterisk/res_parking.conf
fi

#Check if I am an AWS instance and set defaults accordingly
dmidecode -s bios-version | grep amazon
if [ "$?" -eq "0" ] ; then
# turn on VCL in Globals
    sqlite3 /opt/sark/db/sark.db "update globals set VCL=1"
# open 80,443 and 22 in the firewall (otherwise we'll be locked out)
    sed -i 's/ACCEPT net:$LAN $FW tcp 80/ACCEPT net $FW tcp 80/' /etc/shorewall/sark_rules
    sed -i 's/ACCEPT net:$LAN $FW tcp 443/ACCEPT net $FW tcp 443/' /etc/shorewall/sark_rules
    sed -i 's/ACCEPT net:$LAN $FW tcp 22/ACCEPT net $FW tcp 22/' /etc/shorewall/sark_rules
fi

# enable setlan
systemctl enable debsetlan.service
systemctl start debsetlan.service

# enable shorewall
[ -e  /etc/shorewall/routestopped ] && mv /etc/shorewall/routestopped /etc/shorewall/routestopped.bak
systemctl enable shorewall.service
systemctl enable shorewall6.service
systemctl enable apache2.service
systemctl stop apache2.service
systemctl start apache2.service

# suppress CDR menu generation for Deb 9 and ubuntu	
[ -e /opt/sark/cache/1520813339.db_v4_admin_perms2 ] && mv /opt/sark/cache/1520813339.db_v4_admin_perms2 /opt/sark/always/
	

a2ensite sark-ssl.conf 
systemctl restart apache2 

#Rebuild the SARK database
/bin/sh /opt/sark/scripts/srkV4reloader.sh
chmod 775 /opt/sark/db
chmod 664 /opt/sark/db/sark.db

#Make the public directories if they aren't there
[ ! -d /opt/sark/public ] && mkdir /opt/sark/public && chown www-data:www-data /opt/sark/public
[ ! -d /opt/sark/public/aastra ] && mkdir /opt/sark/public/aastra && chown www-data:www-data /opt/sark/public/aastra
[ ! -d /opt/sark/public/cisco ] && mkdir /opt/sark/public/cisco && chown www-data:www-data /opt/sark/public/cisco
[ ! -d /opt/sark/public/panasonic ] && mkdir /opt/sark/public/panasonic && chown www-data:www-data /opt/sark/public/panasonic
[ ! -d /opt/sark/public/polycom ] && mkdir /opt/sark/public/polycom && chown www-data:www-data /opt/sark/public/polycom
[ ! -d /opt/sark/public/snom ] && mkdir /opt/sark/public/snom && chown www-data:www-data /opt/sark/public/snom
[ ! -d /opt/sark/public/vtech ] && mkdir /opt/sark/public/vtech && chown www-data:www-data /opt/sark/public/vtech
[ ! -d /opt/sark/public/yealink ] && mkdir /opt/sark/public/yealink && chown www-data:www-data /opt/sark/public/yealink

#set up shellinabox to our likin
sed -i "/^SHELLINABOX_PORT/c\SHELLINABOX_PORT=63005" /etc/default/shellinabox
sed -i '/^SHELLINABOX_ARGS/c\SHELLINABOX_ARGS="--no-beep --localhost-only --disable-peer-check --disable-ssl"' /etc/default/shellinabox
[ -e /etc/shellinabox/options-enabled/00_White\ On\ Black.css ] && rm -rf /etc/shellinabox/options-enabled/00_White\ On\ Black.css
systemctl restart shellinabox

#create a shellinabox user group
grep -q console /etc/group
if [ "$?" -ne "0" ] ; then
    echo Creating group console 
    groupadd console
else
    echo group console already exists not creating
fi

#create a shellinabox user with a default pasword of "console"
grep -q console /etc/passwd
if [ "$?" -ne "0" ] ; then
    echo Creating user id console for shellinabox
    ENCPASS=`openssl passwd -1 "console"`
    useradd -u 12345 -g console -d /home/console -s /bin/bash -p $ENCPASS -m console 
else
    echo console user already exists, not creating
fi

#add console to sudoers
usermod -a -G sudo console

#stop and restart the helper to reset the socket
sv d srk-ua-helper
sleep 1
sv u srk-ua-helper

#add definitions to MySQL
mysql -u root < /opt/sark/stat/asterisk-stat-v2/cdr-mysql-setup.sql

#stop systemd.resolved - it interferes with dnsmasq
systemctl disable systemd-resolved
#restart dnsmasq
systemctl restart dnsmasq

#Install date
date --iso-8601=minutes > /opt/sark/db/.sail-install-date
